{"version":3,"sources":["../../../src/@ionic-native/plugins/status-bar/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAS,eAAA,EAAiB,MAAA,EAAQ,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAEzF;;;;;;;;;;;;;;;;;;;;;;GAsBG;AASH,IAAa,SAAS;IAAS,6BAAiB;IAAhD;;IAiGA,CAAC;IAhGC;;;;;OAKG;IAIH,mCAAe,GAAf,UAAgB,WAAoB,IAAI,CAAC;IAAA,CAAC;IAE1C;;OAEG;IAIH,gCAAY,GAAZ,cAAiB,CAAC;IAAA,CAAC;IAEnB;;OAEG;IAIH,qCAAiB,GAAjB,cAAsB,CAAC;IAAA,CAAC;IAExB;;OAEG;IAIH,yCAAqB,GAArB,cAA0B,CAAC;IAAA,CAAC;IAE5B;;OAEG;IAIH,oCAAgB,GAAhB,cAAqB,CAAC;IAAA,CAAC;IAEvB;;;;;;;OAOG;IAIH,yCAAqB,GAArB,UAAsB,SAAiB,IAAI,CAAC;IAAA,CAAC;IAE7C;;;;;;OAMG;IAIH,8CAA0B,GAA1B,UAA2B,SAAiB,IAAI,CAAC;IAAA,CAAC;IAElD;;OAEG;IAIH,wBAAI,GAAJ,cAAS,CAAC;IAAA,CAAC;IAEX;;MAEE;IAIF,wBAAI,GAAJ,cAAS,CAAC;IAAA,CAAC;IAcb,gBAAC;AAAD,CAjGA,AAiGC,CAjG8B,iBAAiB,GAiG/C;AANM,oBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,wBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAtFA;IAHC,OAAO,CAAC;QACP,IAAI,EAAE,IAAI;KACX,CAAC;;;;gDACuC;AAQzC;IAHC,OAAO,CAAC;QACP,IAAI,EAAE,IAAI;KACX,CAAC;;;;6CACgB;AAQlB;IAHC,OAAO,CAAC;QACP,IAAI,EAAE,IAAI;KACX,CAAC;;;;kDACqB;AAQvB;IAHC,OAAO,CAAC;QACP,IAAI,EAAE,IAAI;KACX,CAAC;;;;sDACyB;AAQ3B;IAHC,OAAO,CAAC;QACP,IAAI,EAAE,IAAI;KACX,CAAC;;;;iDACoB;AAatB;IAHC,OAAO,CAAC;QACP,IAAI,EAAE,IAAI;KACX,CAAC;;;;sDAC0C;AAY5C;IAHC,OAAO,CAAC;QACP,IAAI,EAAE,IAAI;KACX,CAAC;;;;2DAC+C;AAQjD;IAHC,OAAO,CAAC;QACP,IAAI,EAAE,IAAI;KACX,CAAC;;;;qCACQ;AAQV;IAHC,OAAO,CAAC;QACP,IAAI,EAAE,IAAI;KACX,CAAC;;;;qCACQ;AAMV;IADC,eAAe;;4CACG;AAzFR,SAAS;IARrB,MAAM,CAAC;QACN,UAAU,EAAE,WAAW;QACvB,MAAM,EAAE,0BAA0B;QAClC,SAAS,EAAE,WAAW;QACtB,IAAI,EAAE,oDAAoD;QAC1D,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,eAAe,CAAC;KAC1D,CAAC;GAEW,SAAS,CAiGrB;SAjGY,SAAS","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Cordova, CordovaProperty, Plugin, IonicNativePlugin } from '@ionic-native/core';\r\n\r\n/**\r\n * @name Status Bar\r\n * @description\r\n * Manage the appearance of the native status bar.\r\n *\r\n * Requires Cordova plugin: `cordova-plugin-statusbar`. For more info, please see the [StatusBar plugin docs](https://github.com/apache/cordova-plugin-statusbar).\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { StatusBar } from '@ionic-native/status-bar';\r\n *\r\n * constructor(private statusBar: StatusBar) { }\r\n *\r\n * ...\r\n *\r\n * // let status bar overlay webview\r\n * this.statusBar.overlaysWebView(true);\r\n *\r\n * // set status bar to white\r\n * this.statusBar.backgroundColorByHexString('#ffffff');\r\n * ```\r\n *\r\n */\r\n@Plugin({\r\n  pluginName: 'StatusBar',\r\n  plugin: 'cordova-plugin-statusbar',\r\n  pluginRef: 'StatusBar',\r\n  repo: 'https://github.com/apache/cordova-plugin-statusbar',\r\n  platforms: ['Android', 'iOS', 'Windows', 'Windows Phone']\r\n})\r\n\r\nexport class StatusBar extends IonicNativePlugin {\r\n  /**\r\n   * Set whether the status bar overlays the main app view. The default\r\n   * is true.\r\n   *\r\n   * @param {boolean} doesOverlay  Whether the status bar overlays the main app view.\r\n   */\r\n  @Cordova({\r\n    sync: true\r\n  })\r\n  overlaysWebView(doesOverlay: boolean) { };\r\n\r\n  /**\r\n   * Use the default statusbar (dark text, for light backgrounds).\r\n   */\r\n  @Cordova({\r\n    sync: true\r\n  })\r\n  styleDefault() { };\r\n\r\n  /**\r\n   * Use the lightContent statusbar (light text, for dark backgrounds).\r\n   */\r\n  @Cordova({\r\n    sync: true\r\n  })\r\n  styleLightContent() { };\r\n\r\n  /**\r\n   * Use the blackTranslucent statusbar (light text, for dark backgrounds).\r\n   */\r\n  @Cordova({\r\n    sync: true\r\n  })\r\n  styleBlackTranslucent() { };\r\n\r\n  /**\r\n   * Use the blackOpaque statusbar (light text, for dark backgrounds).\r\n   */\r\n  @Cordova({\r\n    sync: true\r\n  })\r\n  styleBlackOpaque() { };\r\n\r\n  /**\r\n   * Set the status bar to a specific named color. Valid options:\r\n   * black, darkGray, lightGray, white, gray, red, green, blue, cyan, yellow, magenta, orange, purple, brown.\r\n   *\r\n   * iOS note: you must call StatusBar.overlaysWebView(false) to enable color changing.\r\n   *\r\n   * @param {string} colorName  The name of the color (from above)\r\n   */\r\n  @Cordova({\r\n    sync: true\r\n  })\r\n  backgroundColorByName(colorName: string) { };\r\n\r\n  /**\r\n   * Set the status bar to a specific hex color (CSS shorthand supported!).\r\n   *\r\n   * iOS note: you must call StatusBar.overlaysWebView(false) to enable color changing.\r\n   *\r\n   * @param {string} hexString  The hex value of the color.\r\n   */\r\n  @Cordova({\r\n    sync: true\r\n  })\r\n  backgroundColorByHexString(hexString: string) { };\r\n\r\n  /**\r\n   * Hide the StatusBar\r\n   */\r\n  @Cordova({\r\n    sync: true\r\n  })\r\n  hide() { };\r\n\r\n  /**\r\n  * Show the StatusBar\r\n  */\r\n  @Cordova({\r\n    sync: true\r\n  })\r\n  show() { };\r\n\r\n  /**\r\n   * Whether the StatusBar is currently visible or not.\r\n   */\r\n  @CordovaProperty\r\n  isVisible: boolean;\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}